#!/bin/bash

# Manual Deployment Instructions for IQOS Catalyst
# When SSH access is not available

echo "🚀 Manual Deployment Instructions for IQOS Catalyst"
echo "=================================================="

echo "📦 Deployment package ready: $(ls -lh iqos-catalyst-fixed.tar.gz)"

echo ""
echo "🔍 === CURRENT STATUS ==="
echo "✅ Build completed successfully"
echo "✅ Package created: iqos-catalyst-fixed.tar.gz"
echo "✅ All fixes applied to the package"
echo "❌ SSH access blocked (Permission denied)"
echo ""

echo "🚀 === MANUAL DEPLOYMENT STEPS ==="
echo ""
echo "Since SSH is not working, you need to deploy manually:"
echo ""
echo "1. 📤 UPLOAD PACKAGE TO SERVER:"
echo "   Option A: AWS Systems Manager Session Manager"
echo "   Option B: EC2 Instance Connect"
echo "   Option C: AWS S3 + download on server"
echo ""
echo "2. 🔧 DEPLOYMENT COMMANDS (run on server):"
echo ""
echo "   # Stop existing processes"
echo "   pm2 stop iqos-catalyst"
echo "   pm2 delete iqos-catalyst"
echo ""
echo "   # Extract new package"
echo "   tar -xzf iqos-catalyst-fixed.tar.gz"
echo ""
echo "   # Create environment file"
echo "   cat > .env.local << 'EOF'"
echo "NODE_ENV=production"
echo "PORT=3000"
echo "OPENAI_API_KEY=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"
echo "EOF"
echo ""
echo "   # Install dependencies"
echo "   npm install --production"
echo ""
echo "   # Create PM2 config"
echo "   cat > ecosystem.config.js << 'EOF'"
echo "module.exports = {"
echo "  apps: [{"
echo "    name: 'iqos-catalyst',"
echo "    script: 'server-production.js',"
echo "    instances: 1,"
echo "    exec_mode: 'fork',"
echo "    env: {"
echo "      NODE_ENV: 'production',"
echo "      PORT: 3000,"
echo "      OPENAI_API_KEY: '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'"
echo "    }"
echo "  }]"
echo "};"
echo "EOF"
echo ""
echo "   # Start application"
echo "   pm2 start ecosystem.config.js"
echo "   pm2 save"
echo ""
echo "   # Test application"
echo "   curl http://localhost:3000/api/health"
echo ""
echo "3. ✅ VERIFICATION:"
echo "   - Check PM2 status: pm2 status"
echo "   - View logs: pm2 logs iqos-catalyst"
echo "   - Test API: curl https://iqos.buentipo.com/api/health"
echo ""

echo "🎯 === QUICK ACCESS METHODS ==="
echo ""
echo "Method 1: AWS Systems Manager Session Manager"
echo "1. Go to AWS EC2 Console"
echo "2. Find instance 18.219.75.63"
echo "3. Click 'Connect' → 'Session Manager'"
echo "4. Run the deployment commands above"
echo ""
echo "Method 2: EC2 Instance Connect"
echo "1. Go to AWS EC2 Console"
echo "2. Find instance 18.219.75.63"
echo "3. Click 'Connect' → 'EC2 Instance Connect'"
echo "4. Run the deployment commands above"
echo ""
echo "Method 3: Upload via S3"
echo "1. Upload iqos-catalyst-fixed.tar.gz to S3"
echo "2. Use Session Manager to download from S3"
echo "3. Run deployment commands"
echo ""

echo "📋 === EXPECTED RESULT ==="
echo "After manual deployment:"
echo "✅ https://iqos.buentipo.com should work"
echo "✅ API endpoints should respond"
echo "✅ PM2 should show stable status"
echo "✅ No more 502 errors"
echo ""

echo "🚨 === CRITICAL FIXES INCLUDED ==="
echo "✅ Uses server-production.js (not server.js)"
echo "✅ Correct port configuration (3000)"
echo "✅ Proper environment variables"
echo "✅ Fixed PM2 configuration"
echo "✅ Clean restart process"
echo ""
echo "The package contains all necessary fixes!"
echo "Just need to deploy it manually to the server."
